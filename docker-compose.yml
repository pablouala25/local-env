services:
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: ${DYNAMODB_CONTAINER_NAME}
    ports:
      - "${DYNAMODB_PORT}:${DYNAMODB_PORT}"
    env_file:
      - .env
    command:
      [
        "-jar", "DynamoDBLocal.jar",
        "-sharedDb",
        "-dbPath", "${DYNAMODB_DATA_PATH}",   # ← ruta interna donde guarda los datos
        "-port", "${DYNAMODB_PORT}"
      ]
    volumes:
      - ./dynamodb_data:${DYNAMODB_DATA_PATH}  # ← monta el volumen aquí
    networks:
      - ${APP_NETWORK}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:${DYNAMODB_PORT} || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    container_name: ${DYNAMODB_ADMIN_CONTAINER_NAME}
    ports:
      - "${DYNAMODB_ADMIN_PORT}:8001"
    env_file:
      - .env
    environment:
      - DYNAMO_ENDPOINT=${DYNAMO_ENDPOINT}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      dynamodb-local:
        condition: service_healthy
    networks:
      - ${APP_NETWORK}
    restart: unless-stopped

  lambda-go-dev:
    image: public.ecr.aws/lambda/provided:al2023
    container_name: ${LAMBDA_GO_DEV_CONTAINER_NAME}
    volumes:
      - ./bin/bootstrap:/var/runtime/bootstrap:ro
    ports:
      - "${LAMBDA_GO_DEV_PORT}:${LAMBDA_GO_DEV_TARGET_PORT}"
    env_file:
      - .env
    environment:
      - AWS_REGION=${AWS_REGION}
      - DYNAMODB_ENDPOINT=${DYNAMODB_ENDPOINT}
      - DYNAMODB_TABLE_NAME=${DYNAMODB_TABLE_NAME}
    command: ["bootstrap"]
    depends_on:
      - dynamodb-local
    networks:
      - ${APP_NETWORK}
    restart: unless-stopped

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"
    env_file:
      - .env
    environment:
      - SERVICES=${SERVICES}
      - PERSISTENCE=${PERSISTENCE:-1}
      - LAMBDA_KEEPALIVE_MS=${LAMBDA_KEEPALIVE_MS:-0}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./localstack_init:/etc/localstack/init/ready.d/:ro
      - "./bin/bootstrap.zip:/opt/code/bootstrap.zip"
      - localstack_state:/var/lib/localstack
    networks:
      - ${APP_NETWORK}

networks:
  app-network:
    driver: bridge

volumes:
  dynamodb_data:
  localstack_state:
    driver: local
