services:
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: ${DYNAMODB_CONTAINER_NAME}
    ports:
      - "${DYNAMODB_PORT}:${DYNAMODB_PORT}"
    environment:
      - AWS_REGION=${AWS_REGION}
      - DYNAMODB_PORT=${DYNAMODB_PORT}
    # indicamos dónde persiste la data
    command:
      [
        "-jar", "DynamoDBLocal.jar",
        "-sharedDb",
        "-dbPath", "/data",        # <<-- aquí!
        "-port", "${DYNAMODB_PORT}"
      ]
    volumes:
      - dynamodb_data:/data      # <<-- montamos el volumen aquí
    networks:
      - ${APP_NETWORK}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:${DYNAMODB_PORT} || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    container_name: ${DYNAMODB_ADMIN_CONTAINER_NAME}
    ports:
      - "${DYNAMODB_ADMIN_PORT}:8001"
    env_file:
      - .env
    environment:
      - DYNAMO_ENDPOINT=${DYNAMO_ENDPOINT}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      dynamodb-local:
        condition: service_healthy
    networks:
      - ${APP_NETWORK}
    restart: unless-stopped

  lambda-go-dev:
    image: public.ecr.aws/lambda/provided:al2023
    container_name: lambda-go-dev
    volumes:
      - ./bin/bootstrap:/var/runtime/bootstrap:ro
    ports:
      - "${LAMBDA_GO_DEV_PORT:-9000}:${LAMBDA_GO_DEV_TARGET_PORT:-8080}"
    env_file:
      - .env
    environment:
      AWS_REGION: ${AWS_REGION:-us-east-1}
      DYNAMODB_ENDPOINT: "http://dynamodb-local:${DYNAMODB_PORT}"
      DYNAMODB_TABLE_NAME: ${DYNAMODB_TABLE_NAME}
    command: [ "bootstrap" ]        # <<< agregado
    depends_on:
      dynamodb-local:
        condition: service_healthy
    networks:
      - ${APP_NETWORK}
    restart: unless-stopped

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"            # Puerto “edge” unificado de LocalStack :contentReference[oaicite:10]{index=10}
    environment:
      - AWS_REGION=${AWS_REGION}
      - SERVICES=apigateway,sqs
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - ./localstack_init:/etc/localstack/init/ready.d/  # Scripts de bootstrap :contentReference[oaicite:11]{index=11}
    networks:
      - ${APP_NETWORK}
  # sns-sqs-mcp:
  #   image: public.ecr.aws/awslabs-mcp/awslabs/amazon-sns-sqs-mcp-server:latest
  #   container_name: ${SNS_SQS_MCP_CONTAINER_NAME}
  #   env_file:
  #     - .env
  #   environment:
  #     - AWS_REGION=${AWS_REGION}
  #     - AWS_PROFILE=${AWS_PROFILE}
  #     - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
  #     - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  #     - MCP_ALLOW_RESOURCE_CREATION=${MCP_ALLOW_RESOURCE_CREATION}
  #   ports:
  #     - "${SNS_SQS_MCP_PORT}:${SNS_SQS_MCP_PORT}"
  #   networks:
  #     - ${APP_NETWORK}
  #   restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  dynamodb_data:
